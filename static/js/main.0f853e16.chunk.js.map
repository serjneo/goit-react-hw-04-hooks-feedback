{"version":3,"sources":["components/Feedback/Feedback.jsx","components/Statistics/Statistics.jsx","components/Section/Section.jsx","components/Notification/Notification.jsx","App.js","index.js"],"names":["FeedbackOptions","options","onLeaveFeedback","className","map","option","name","type","onClick","Statistics","good","neutral","bad","total","positivePercentage","Section","title","children","Notification","message","App","useState","setGood","setBad","setNeutral","feedbackTypes","Object","keys","countTotalFeedback","percentage","Math","round","event","currentTarget","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0TAsBeA,EAnBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAElC,OACE,qBAAKC,UAAU,YAAf,SACGF,EAAQG,KAAI,SAAAC,GAAM,OACf,wBAAqBC,KAAMD,EAAQE,KAAK,SAASC,QAASN,EACxDC,UAAU,SADZ,SAEGE,GAFUA,S,MC4BRI,MAhCf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC7C,OACI,8BACI,qBAAIX,UAAW,OAAf,UACI,oBAAIA,UAAW,OAAf,SACI,0CAAaO,EAAb,SAEJ,oBAAIP,UAAW,OAAf,SACI,6CAAgBQ,OAEpB,oBAAIR,UAAW,OAAf,SACI,yCAAYS,EAAZ,SAEH,oBAAIT,UAAW,OAAf,SACG,2CAAcU,OAEjB,oBAAIV,UAAW,OAAf,SACG,uDAA0BW,EAA1B,gB,MCLLC,MAbd,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACzB,OACE,sBAAKd,UAAW,YAAhB,UACE,oBAAIA,UAAY,QAAhB,SAAyBa,IACxBC,M,MCOQC,MAXf,YAAoC,IAAZC,EAAW,EAAXA,QACpB,OACI,mBAAGhB,UAAW,OAAd,SACKgB,KCAE,SAASC,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOX,EAAP,KAAaY,EAAb,KACA,EAAsBD,mBAAS,GAA/B,mBAAOT,EAAP,KAAYW,EAAZ,KACA,EAA8BF,mBAAS,GAAvC,mBAAOV,EAAP,KAAgBa,EAAhB,KAEMC,EAAgB,CAAEf,OAAME,MAAKD,WAC7BV,EAAUyB,OAAOC,KAAKF,GAmBtBG,EAAqB,kBAAMlB,EAAOE,EAAMD,GAIxCE,EAAQe,IACRC,EAHJC,KAAKC,MAAOrB,EAAOkB,IAAwB,KAI7C,OACE,gCACE,cAAC,EAAD,CAASZ,MAAO,wBAAhB,SACE,cAAC,EAAD,CACEf,QAASA,EACTC,gBA5BY,SAAA8B,GAElB,OADiBA,EAAMC,cAAf3B,MAEN,IAAK,OACHgB,EAAQZ,EAAO,GACf,MACF,IAAK,MACHa,EAAOX,EAAM,GACb,MACF,IAAK,UACHY,EAAWb,EAAU,GACrB,MACF,QACE,aAkBDE,EAAQ,EACP,cAAC,EAAD,CAASG,MAAO,aAAhB,SACE,cAAC,EAAD,CACEN,KAAMA,EACNE,IAAKA,EACLD,QAASA,EACTE,MAAOA,EACPC,mBAAoBe,MAIxB,cAAC,EAAD,CAAcV,QAAS,yB,MCnD/Be,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAChB,EAAD,MAEFiB,SAASC,eAAe,W","file":"static/js/main.0f853e16.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\nimport './Feedback.scss'\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {options.map(option => (\r\n          <button key={option} name={option} type=\"button\" onClick={onLeaveFeedback}\r\n            className=\"button\">\r\n            {option}\r\n          </button>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;","import PropTypes from 'prop-types';\r\nimport './Statistics.scss'\r\n\r\n\r\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\r\n    return (\r\n        <div>\r\n            <ul className =\"list\">\r\n                <li className= \"item\">\r\n                    <span>Good: {good} </span>\r\n                </li>\r\n                <li className= \"item\">\r\n                    <span>Neutral: {neutral}</span>\r\n                </li>\r\n                <li className= \"item\">\r\n                    <span>Bad: {bad} </span>\r\n                </li>\r\n                 <li className= \"item\">\r\n                    <span>Total: {total}</span>\r\n                </li>\r\n                 <li className= \"item\">\r\n                    <span>Positive feedback: {positivePercentage} %</span> \r\n                </li>\r\n            </ul>\r\n            </div>\r\n    )\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n}\r\n\r\nexport default Statistics;","import PropTypes from 'prop-types';\r\n import './Section.scss'\r\n\r\n function Section({ title, children }) {\r\n  return (\r\n    <div className= \"container\">\r\n      <h2 className = \"title\">{title}</h2>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.element.isRequired,\r\n};\r\nexport default Section;","import PropTypes from 'prop-types';\r\nimport './Notification.scss'\r\n\r\nfunction Notification({ message }) {\r\n    return (\r\n        <p className =\"text\">\r\n            {message}\r\n       </p>\r\n   )  \r\n } \r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string.isRequired,\r\n}\r\nexport default Notification;","import { useState } from 'react';\nimport FeedbackOptions from './components/Feedback';\nimport Statistics from './components/Statistics';\nimport Section from './components/Section';\nimport Notification from './components/Notification';\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n\n  const feedbackTypes = { good, bad, neutral };\n  const options = Object.keys(feedbackTypes);\n\n  const addFeedback = event => {\n    const { name } = event.currentTarget;\n    switch (name) {\n      case 'good':\n        setGood(good + 1);\n        break;\n      case 'bad':\n        setBad(bad + 1);\n        break;\n      case 'neutral':\n        setNeutral(neutral + 1);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const countTotalFeedback = () => good + bad + neutral;\n  const countPositiveFeedbackPercentage = () =>\n    Math.round((good / countTotalFeedback()) * 100);\n\n  const total = countTotalFeedback();\n  const percentage = countPositiveFeedbackPercentage();\n  return (\n    <div>\n      <Section title={'Please leave feedback'}>\n        <FeedbackOptions\n          options={options}\n          onLeaveFeedback={addFeedback}\n        ></FeedbackOptions>\n      </Section>\n      {total > 0 ? (\n        <Section title={'Statistics'}>\n          <Statistics\n            good={good}\n            bad={bad}\n            neutral={neutral}\n            total={total}\n            positivePercentage={percentage}\n          ></Statistics>\n        </Section>\n      ) : (\n        <Notification message={'No feedback given'} />\n      )}\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}